openapi: 3.0.1
info:
  title: User service
  description: "Because we need users"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: http://127.0.0.1:3333
tags:
  - name: user
    description: users informations and manipulations
paths:
  /users:
    get:
      tags:
        - user
      summary: List of all users
      operationId: getAllUsers
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      tags:
        - user
      summary: Add a new user
      operationId: createUser
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"

      responses:
        "201":
          description: Created
        "409":
          description: unsuccessful operation
  /auth/connect:
    post:
      tags:
        - user
      summary: Connect the user
      operationId: connectUser
      parameters:
        - in: query
          name: username
          schema:
            type: string
          required: true
        - in: query
          name: password
          schema:
            type: string
          required: true
      responses:
        "200":
          description: authentificated
          content:
            application/json:
              schema:
                type: string
                description: JWT token
        "401":
          description: wrong credentials
  /users/{id}:
    get:
      tags:
        - user
      summary: Retrieves a specific user
      operationId: getUserById
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
            minimum: 0
          description: The user ID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
components:
  schemas:
    User:
      title: user
      description: a user
      type: object
      properties:
        id:
          description: id of the user
          type: integer
          format: int64
          minimum: 0
        username:
          description: name of the user
          type: string
          format: text
        statut:
          description: status of the user
          type: string
        score:
          description: score of the player
          type: integer
          format: number
        password:
          description: password of the user
          type: string
          format: text
