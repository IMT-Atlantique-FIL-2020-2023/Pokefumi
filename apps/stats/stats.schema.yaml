openapi: 3.0.1
info:
  title: Stats service
  description: "Because we need statistics"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: https://127.0.0.1:3337
tags:
  - name: pokemon
    description: Pokemon stats
  - name: round
    description: Rounds stats
paths:
  /stats:
    put:
      tags:
        - stats
      summary: Upload stats
      operationId: uploadStatRow
      description: Upload stats
      requestBody:
        description: Stats to upload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StatsDto"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatsDto"
        400:
          $ref: "#/components/responses/ErrorResponse"
  /rounds/count-a-day-last-30-days:
    get:
      tags:
        - round
      summary: Number of rounds a day for the last 30 days
      operationId: getRoundsAdayLast30Days
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfRounds"
  /pokemons/{id}/number-of-rounds:
    get:
      tags:
        - pokemon
      summary: Number of rounds for a specific pokemon
      description: Returns the number of rounds for a specific pokemon
      operationId: getNumberOfRoundsByPokemon
      parameters:
        - name: id
          in: path
          description: Pokemon ID
          required: true
          schema:
            $ref: "#/components/schemas/PokemonID"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Pokemon's id used in the request
                    type: integer
                    format: int64
                  numberOfRounds:
                    description: Number of rounds for this pokemon
                    type: integer
                    format: int64
        400:
          $ref: "#/components/responses/ErrorResponse"
  /pokemons/{id}/number-of-victories:
    get:
      tags:
        - pokemon
      summary: Number of victories for a specific pokemon
      description: Returns the number of victories for a specific pokemon
      operationId: getNumberOfVictoriesByPokemon
      parameters:
        - name: id
          in: path
          description: Pokemon ID
          required: true
          schema:
            $ref: "#/components/schemas/PokemonID"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Pokemon's id used in the request
                    type: integer
                    format: int64
                    minimum: 0
                  numberOfVictories:
                    description: Number of victories for this pokemon
                    type: integer
                    format: int64
        400:
          $ref: "#/components/responses/ErrorResponse"
  /pokemons/rounds:
    get:
      tags:
        - pokemon
      summary: List of pokemons with their number of rounds
      description: Returns the list of pokemons with their number of rounds
      operationId: getPokemonsWithNumberOfRounds
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfPokemons"
components:
  schemas:
    StatsDto:
      type: object
      required:
        - idPokemon
        - idMatch
        - team
        - victory
        - dateMatch
      properties:
        idPokemon:
          description: Pokemon's id
          type: integer
          format: int64
          minimum: 0
        dateMatch:
          description: Date of the round
          type: string
          format: date-time
        victory:
          description: Victory (if true) or defeat
          type: boolean
        idMatch:
          description: Round's id
          type: integer
          format: int64
          minimum: 0
        team:
          description: Team of the pokemon
          type: integer
          minimum: 0
          maximum: 1
    ArrayOfRounds:
      title: Array Of Rounds Stats
      description: Array of rounds
      type: array
      items:
        type: object
        required:
          - date
          - numberOfRounds
        properties:
          date:
            description: Date of the aggregated day
            type: string
            format: date
          numberOfRounds:
            description: Number of rounds for this day
            type: integer
            format: number
    ArrayOfPokemons:
      title: Array Of Pokemons Stats
      description: Array of pokemons
      type: array
      items:
        type: object
        required:
          - id
          - numberOfRounds
        properties:
          id:
            description: Pokemon's id
            type: integer
            format: int64
            minimum: 0
          numberOfRounds:
            description: Number of rounds for this pokemon
            type: integer
            format: int64
    PokemonID:
      type: integer
      minimum: 0
    AppError:
      type: "object"
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
          example: "Internal error"
  responses:
    ErrorResponse:
      description: An error caused by the client
      content:
        application/json:
          schema:
            type: "array"
            items:
              $ref: "#/components/schemas/AppError"
