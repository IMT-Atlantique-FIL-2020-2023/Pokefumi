/* eslint-disable */
// tslint:disable
/**
 * Stats service
 * Because we need statistics
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express } from 'express'
import passport from 'passport'
import * as t from './types'
import * as v from '../../validation'
import { Api } from '../../models'

export default function(app: Express, impl: t.PokemonApi) {
	app.get(
		'/pokemons/matchs',
		function (req, res) {
			try {
				impl.getPokemonsWithNumberOfMatchs().then(function (response) {
					if (response.status === 200) {
						let body: any
						try {
							body = v.arrayToJson(v.modelApiArrayOfPokemonToJson)('response', response.body)
						} catch (error) {
							console.error('Invalid response body in pokemon.getPokemonsWithNumberOfMatchs', error)
							res.status(500)
							res.send()
							return
						}

						res.status(200)
						res.send(body)
						return
					}

					console.log('Unsupported response in pokemon.getPokemonsWithNumberOfMatchs', response)
					res.status(500)
					res.send()
				}).catch(function (error) {
					console.error('Unexpected error in pokemon.getPokemonsWithNumberOfMatchs', error.stack || error)
					res.status(500)
					res.send()
				})
			} catch (error) {
				/* Catch validation errors */
				res.status(400)
				res.send(error)
			}
		}
	)

	app.get(
		'/pokemons/:id/number-of-matchs',
		function (req, res) {
			try {
				impl.getNumberOfMatchsByPokemon(v.parseInteger('params.id', req.params['id'])).then(function (response) {
					if (response.status === 200) {
						let body: any
						try {
							body = v.modelApiGetNumberOfMatchsByPokemon200ResponseToJson('response', response.body)
						} catch (error) {
							console.error('Invalid response body in pokemon.getNumberOfMatchsByPokemon', error)
							res.status(500)
							res.send()
							return
						}

						res.status(200)
						res.send(body)
						return
					}

					console.log('Unsupported response in pokemon.getNumberOfMatchsByPokemon', response)
					res.status(500)
					res.send()
				}).catch(function (error) {
					console.error('Unexpected error in pokemon.getNumberOfMatchsByPokemon', error.stack || error)
					res.status(500)
					res.send()
				})
			} catch (error) {
				/* Catch validation errors */
				res.status(400)
				res.send(error)
			}
		}
	)

	app.get(
		'/pokemons/:id/number-of-victories',
		function (req, res) {
			try {
				impl.getNumberOfVictoriesByPokemon(v.parseInteger('params.id', req.params['id'])).then(function (response) {
					if (response.status === 200) {
						let body: any
						try {
							body = v.modelApiGetNumberOfVictoriesByPokemon200ResponseToJson('response', response.body)
						} catch (error) {
							console.error('Invalid response body in pokemon.getNumberOfVictoriesByPokemon', error)
							res.status(500)
							res.send()
							return
						}

						res.status(200)
						res.send(body)
						return
					}

					console.log('Unsupported response in pokemon.getNumberOfVictoriesByPokemon', response)
					res.status(500)
					res.send()
				}).catch(function (error) {
					console.error('Unexpected error in pokemon.getNumberOfVictoriesByPokemon', error.stack || error)
					res.status(500)
					res.send()
				})
			} catch (error) {
				/* Catch validation errors */
				res.status(400)
				res.send(error)
			}
		}
	)

}
